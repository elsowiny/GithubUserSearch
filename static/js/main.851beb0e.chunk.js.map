{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","user","setUser","errorOnSearch","handleSearch","event","a","fetch","method","headers","then","response","json","responseData","console","log","catch","err","Container","className","placeholder","onChange","value","target","onClick","src","avatar_url","alt","style","whiteSpace","login","bio","followers","following","public_repos","href","html_url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQA8IeA,MA1If,WACE,IACA,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KACA,GADA,KAC0CH,mBAAS,OAAnD,mBAMMI,GANN,UAMkB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACnBC,MAAM,gCAAD,OAAiCN,GAAQ,CAC1CO,OAAQ,MACRC,QAAS,CACT,OAAU,mBACV,eAAgB,sBAGnBC,MAAK,SAAAC,GAAc,OAAOA,EAASC,UACnCF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZX,EAAQW,MAITG,OAAM,SAAAC,GACHH,QAAQC,IAAI,cAAgBE,MAhBb,2CAAH,uDAwClB,OACE,cAACC,EAAA,EAAD,CAAWC,UAAU,0BAArB,SACA,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACE,mDACA,uBAAOA,UAAU,YAAYC,YAAY,gBAAgBC,SAlDvC,SAAChB,GACzB,IAAMiB,EAAQjB,EAAMkB,OAAOD,MAC3BpB,EAAQoB,SAkDN,wBAAQE,QAASpB,EAAjB,oBACA,qBAAKe,UAAU,gBAAf,SACE,qBAAKM,IAAKxB,EAAOA,EAAKyB,WAAa,GAAIP,UAAU,eAAeQ,IAAI,kBAEtE,qBAAKR,UAAU,aAAf,SAA4B,4BAAIhB,GAAgC,OAChE,qBAAKgB,UAAU,cAAcS,MAAO,CAAEC,WAAY,SAG9C,gCACG5B,EAAOA,EAAK6B,MAAQ,GAAG,uBACvB7B,EAAOA,EAAK8B,IAAM,GAAG,uBAFxB,cAGc9B,EAAOA,EAAK+B,UAAY,GAAG,uBAHzC,cAIc/B,EAAOA,EAAKgC,UAAY,GAAG,uBAJzC,iBAKiBhC,EAAOA,EAAKiC,aAAe,GAAG,uBAL/C,YAOYjC,EAAO,mBAAGkC,KAAMlC,EAAKmC,SAAd,SAAyBnC,EAAKmC,WAAgB,GAAG,gCChE/DC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.851beb0e.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\nimport './App.css';\nimport Container from '@material-ui/core/Container';\n\nfunction App() {\n  const url = 'https://api.github.com/users/';\n  const [user, setUser] = useState(null);\n  const [errorOnSearch, setError] = useState(null);\n  const [searchResults, setSearchResults] = useState(null);\n  const handleInputChange = (event) => {\n    const value = event.target.value;\n    setUser(value);\n   // console.log(value);\n  }\n  const handleSearch = async (event) => {\n    fetch(`https://api.github.com/users/${user}`, {\n        method: 'GET',\n        headers: {\n        \"Accept\": \"application/json\",\n        'Content-Type': 'application/json'\n        }\n    })\n    .then(response => { return response.json();})\n    .then(responseData => {\n      console.log(responseData); \n      setUser(responseData);\n    })\n   // .then(data => {this.setState({\"questions\" : data});})\n\n    .catch(err => {\n        console.log(\"fetch error\" + err);\n    });\n\n\n\n\n\n\n\n\n/*\n\n   const res = await fetch(`https://api.github.com/users/${user}`)\n   if(res.status === 200) {\n     setError(null);\n    // setUser(res.json());\n    //setSearchResults(res.json());\n    console.log(res.json());\n   }\n\n\n    //console.log(searchResults);\n    */\n  }\n  return (\n    <Container className=\"d-flex flex-column py-2\">\n    <div className=\"App\">\n        <div className=\"input\">\n          <h1>Search for a user</h1>\n          <input className=\"inputElem\" placeholder=\"Search GitHub\" onChange={handleInputChange}/>\n        </div>\n      <button onClick={handleSearch}>Search</button>\n      <div className=\"image-wrapper\">\n        <img src={user ? user.avatar_url : \"\"} className=\"image-adjust\" alt=\"user avatar\"></img>\n      </div>\n      <div className=\"error-info\"><p>{errorOnSearch ? errorOnSearch : ''}</p></div>\n      <div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\n        \n          </div>\n          <div>\n            {user ? user.login : ''}<br></br>\n            {user ? user.bio : ''}<br></br>\n            followers: {user ? user.followers : ''}<br></br>\n            following: {user ? user.following : ''}<br></br>\n            repositories: {user ? user.public_repos : ''}<br></br>\n\n            Github : {user ? <a href={user.html_url}>{user.html_url}</a> : ''}<br></br>\n            {/*\n            {login: \"elsowiny\", id: 6583011, node_id: \"MDQ6VXNlcjY1ODMwMTE=\", avatar_url: \"https://avatars.githubusercontent.com/u/6583011?v=4\", gravatar_id: \"\", â€¦}\navatar_url: \"https://avatars.githubusercontent.com/u/6583011?v=4\"\nbio: null\nblog: \"elsowiny.com\"\ncompany: null\ncreated_at: \"2014-02-04T09:19:52Z\"\nemail: null\nevents_url: \"https://api.github.com/users/elsowiny/events{/privacy}\"\nfollowers: 12\nfollowers_url: \"https://api.github.com/users/elsowiny/followers\"\nfollowing: 10\nfollowing_url: \"https://api.github.com/users/elsowiny/following{/other_user}\"\ngists_url: \"https://api.github.com/users/elsowiny/gists{/gist_id}\"\ngravatar_id: \"\"\nhireable: true\nhtml_url: \"https://github.com/elsowiny\"\nid: 6583011\nlocation: null\nlogin: \"elsowiny\"\nname: \"Sherief Elsowiny\"\nnode_id: \"MDQ6VXNlcjY1ODMwMTE=\"\norganizations_url: \"https://api.github.com/users/elsowiny/orgs\"\npublic_gists: 0\npublic_repos: 65\nreceived_events_url: \"https://api.github.com/users/elsowiny/received_events\"\nrepos_url: \"https://api.github.com/users/elsowiny/repos\"\nsite_admin: false\nstarred_url: \"https://api.github.com/users/elsowiny/starred{/owner}{/repo}\"\nsubscriptions_url: \"https://api.github.com/users/elsowiny/subscriptions\"\ntwitter_username: null\ntype: \"User\"\nupdated_at: \"2021-08-22T07:24:16Z\"\nurl: \"https://api.github.com/users/elsowiny\"\n\n*/}\n           \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          </div>\n\n      </div>\n      </Container>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}